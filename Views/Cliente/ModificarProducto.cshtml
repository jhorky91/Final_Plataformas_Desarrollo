@{
    ViewData["Title"] = "Modificar Producto";
    Producto p = (Producto)ViewData["Producto"];
}
@model ModificarCarroViewModel;


<div class="container">
    <div class="row">
        <div class="col-md-4 mx-auto my-auto">
            <div class="card text-center">
                <div class="card-body">
                    <section>
                        <h5>@p.nombre</h5>
                        <form asp-controller="Cliente" asp-action="ModificarCarro" method="post">
                            <div class="form-group">
                                <input asp-for="Input.ID" class="form-control" value="@p.idProducto" hidden />
                            </div>
                            <div class="form-group">
                                <input asp-for="Input.Cantidad" class="form-control" placeholder="Ingrese cantidad de unidades" autofocus />
                                <span asp-validation-for="Input.Cantidad" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <span class="text-danger">
                                    @Html.DisplayFor(lvm => lvm.ErrorMessage)
                                </span>
                            </div>
                            <button type="submit" class="btn btn-success btn-block">Modificar Producto</button>
                        </form>
                    </section>
                    <label id="indexMessage" class="error">@Html.DisplayFor(lvm => lvm.ErrorMessage)</label>
                </div>

            </div>
        </div>

    </div>
</div>

@section Scripts{
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
